# .github/workflows/update-wallpaper-json.yml
name: Update Wallpaper JSON

on:
  push:
    branches: [ main ]
    paths: 
      - 'wallpapers/**'  # Watch the wallpapers folder
  workflow_dispatch:

jobs:
  update-json:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Debug - List files
      run: |
        echo "Files in root directory:"
        ls -la
        echo ""
        echo "Files in wallpapers directory:"
        ls -la wallpapers/ || echo "wallpapers directory not found"
        echo ""
        echo "Image files found in wallpapers:"
        find ./wallpapers -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" -o -iname "*.webp" -o -iname "*.gif" \) 2>/dev/null || echo "No image files found"
        
    - name: Generate wallpaper.json
      run: |
        # Create the JSON generation script
        cat > generate_json.js << 'EOF'
        const fs = require('fs');
        const path = require('path');
        
        const WALLPAPER_DIR = './wallpapers'; // Your actual wallpapers folder
        const OUTPUT_FILE = './wallpapers.json'; // Changed to wallpapers.json (plural)
        const BASE_URL = 'https://raw.githubusercontent.com/Tareq4322/my-walls/main/wallpapers/';
        
        // Supported image extensions
        const IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.webp', '.gif'];
        
        function generateWallpaperJson() {
          try {
            // Check if wallpapers directory exists
            if (!fs.existsSync(WALLPAPER_DIR)) {
              console.error('Wallpapers directory does not exist:', WALLPAPER_DIR);
              process.exit(1);
            }
            
            // Read the wallpapers directory
            const files = fs.readdirSync(WALLPAPER_DIR);
            
            // Filter image files and exclude system files
            const imageFiles = files.filter(file => {
              const ext = path.extname(file).toLowerCase();
              return IMAGE_EXTENSIONS.includes(ext) && !file.startsWith('.');
            });
            
            console.log('Found image files:', imageFiles); // Debug log
            
            // Generate the JSON structure
            const wallpapers = imageFiles.map(file => ({
              id: path.parse(file).name,
              url: BASE_URL + file,
              name: path.parse(file).name.replace(/[-_]/g, ' ').replace(/\b\w/g, l => l.toUpperCase()),
              category: "Auto-generated"
            }));
            
            const jsonData = {
              wallpapers: wallpapers,
              lastUpdated: new Date().toISOString(),
              totalCount: wallpapers.length
            };
            
            // Write to file
            fs.writeFileSync(OUTPUT_FILE, JSON.stringify(jsonData, null, 2));
            console.log(`Generated ${OUTPUT_FILE} with ${wallpapers.length} wallpapers`);
            console.log('JSON content:', JSON.stringify(jsonData, null, 2)); // Debug log
            
          } catch (error) {
            console.error('Error generating wallpaper.json:', error);
            process.exit(1);
          }
        }
        
        generateWallpaperJson();
        EOF
        
        # Run the script
        node generate_json.js
        
    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are changes
        if [[ -n $(git status --porcelain) ]]; then
          git add wallpaper.json
          git commit -m "Auto-update wallpaper.json [skip ci]"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
        else
          echo "No changes to commit"
        fi
